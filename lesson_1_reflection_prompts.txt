How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed exactly what was different very clearly,which helps comparing files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Less time spent version-tracking code and more time developing new features,also helps organization of project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It eneables us to organize our version control systems not on basis of abritary timestamps or chanhes of n lines
	but instead let's us focus on creating meaningfull and logical commits,enbling easier bug-tracking and better organization.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because it's more useful for code writing to have changes which are made in one file be reflected in every file of the repository,and for these changes to be logged.

How can you use the commands git log and git diff to view the history of files?

    By using log we can see all commits made of a repository in an orderlly fashion and with diff we can compare two commits with their differences hightlighted.

How might using version control make you more confident to make changes that
could break something?

    It makes it easier to see changes made along time in a project,which eases bug-tracking in case of something breaking.

Now that you have your workspace set up, what do you want to try using Git for?

    Organize my previous projects and start a new one now using version-tracking to help me be more eficient
